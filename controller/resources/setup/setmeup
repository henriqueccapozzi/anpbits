#!/usr/bin/python3

import os

from anpbits.utils import get_user_args, run_local_command, print_lesson_setup


def update_controller_to_lesson(lesson_id: int):
    # Install openssh client
    run_local_command(
        f"ansible localhost -m ansible.builtin.yum -a name=openssh-clients -v"
    )
    print_lesson_setup(1)

    if lesson_id <= 2:
        return None

    # Create inventory
    run_local_command(f"mkdir -p /etc/ansible")
    with open("/etc/ansible/hosts", "w") as f:
        f.writelines(
            [
                "client-1\n",
                "client-2\n",
            ]
        )
    print_lesson_setup(2)
    if lesson_id <= 3:
        return None

    # Install python3 on clients
    os.putenv("ANSIBLE_HOST_KEY_CHECKING", "false")
    os.putenv("ANSIBLE_PYTHON_INTERPRETER", "/usr/libexec/platform-python")
    run_local_command(
        f"ansible all -vv -m ansible.builtin.dnf -a name=python38 -u student -e ansible_ssh_password=anpbits --become"
    )
    print_lesson_setup(3)

    if lesson_id <= 4:
        return None

    # Change the content of /etc/motd
    run_local_command(
        "ansible-playbook resources/playbooks/update_motd.yml -u student -e ansible_ssh_password=anpbits --become"
    )
    print_lesson_setup(4)
    if lesson_id <= 5:
        return None


def main():
    user_arguments = get_user_args()

    print("\n" * 1)
    print("*" * 50)
    print("Setup summary")
    update_controller_to_lesson(user_arguments.lesson)
    print("\n" * 2)


if __name__ == "__main__":
    main()
